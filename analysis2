# 우리 애는 머리는 좋은데, 공부를 안해서 그래요 
- 데이터로 살펴보는 우리 아이 학습 성공/실패 요소
----------

## 실습 가이드
    1. 데이터를 다운로드하여 불러옵니다.
    2. 필요한 라이브러리는 모두 코드로 작성되어 있습니다.
    3. 코드는 위에서부터 아래로 순서대로 실행합니다.
    
    
## 데이터 소개
- 이번 주제는 xAPI-Edu-Data 데이터셋을 사용합니다.
    
- 다음 1개의 csv 파일을 사용합니다.
    - xAPI-Edu-Data.csv
    
- 각 파일의 컬럼은 아래와 같습니다.
    1. gender: 학생의 성별 (M: 남성, F: 여성)
    1. NationaliTy: 학생의 국적
    1. PlaceofBirth: 학생이 태어난 국가
    1. StageID: 학생이 다니는 학교 (초,중,고)
    1. GradeID: 학생이 속한 성적 등급
    1. SectionID: 학생이 속한 반 이름
    1. Topic: 수강한 과목
    1. Semester: 수강한 학기 (1학기/2학기)
    1. Relation: 주 보호자와 학생의 관계
    1. raisedhands: 학생이 수업 중 손을 든 횟수
    1. VisITedResources: 학생이 과목 컨텐츠를 활용한 횟수
    1. AnnouncementsView : 학생이 과목 공지를 확인한 횟수
    1. Discussion: 학생이 토론 그룹에 참여한 횟수
    1. ParentAnsweringSurvey: 부모가 학교 설문에 참여했는지 여부
    1. ParentschoolSatisfaction: 부모가 학교에 만족했는지 여부
    1. StudentAbscenceDays: 학생의 결석 횟수 (7회 이상/미만)
    1. Class: 학생의 성적 등급 (L: 낮음, M: 보통, H: 높음) ★ 분석목표 ★ 
        
    
    
- 데이터 출처: https://www.kaggle.com/aljarah/xAPI-Edu-Data

## 분석 목표
    - 어떠한 요인이 학생의 성적등급에 영향을 줄까?
    - 데이터 탐색과 분석, 시각화를 통한 인사이트 습득

---

## Step 1. 데이터셋 준비하기

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

### 문제 1. Pandas 라이브러리로 csv파일 읽어들이기


# notebook 파일과 동일 경로에 csv 파일 을 DataFrame 으로 읽어와서 변수에 담기
import os
basepath = r'D:\DevRoot\dataset'
basepath = r'K:\dataset\300제_머신러닝\Part 1 - 머신러닝 분류 모델\Chapter 2 - 우리 애는 머리는 좋은데 공부를 안해서 그래요'
datapath = os.path.join(basepath, 'xAPI-Edu-Data.csv')
df = pd.read_csv(datapath)
df



## Step 2. EDA 및 데이터 기초 통계 분석


### 문제 2. 데이터프레임의 각 컬럼 분석하기


# DataFrame에서 제공하는 메소드를 이용하여 컬럼 분석하기
# - 코드 작성
# - 실행 결과에 따른 컬럼 분석
# - 수치형 데이터에 대한 범위 확인
# - 분류형 데이터의 범주 확인
# - 위 각 분석및 확인은 별도의 셀에 주석으로 작성하기

# DataFrame에서 제공하는 메소드를 이용하여 컬럼 분석하기 (head(), info(), describe())

df.head()

# ↑각 컬럼의 의미 다시 확인해보자.

"""
각 컬럼의 의미에 대해 확인
성적에 중요하지 않을 것으로 보이는 컬럼들도 보인다. --> SectionID (반이름)...
raisedhandsk, VisITedResources, Discussion  <-- 웬지 성적결과의 관련성을 가르는데 유용할거 같다.(인사이트)
"""
None


df.info()

"""
480개의 데이터
꽉 차있다. ! 결측치가 없다. 연구용 데이터 들은 잘 정리 되어있다.
수치형들 
dtype raisedhands               480 non-null    int64 
  VisITedResources          480 non-null    int64 
 11  AnnouncementsView         480 non-null    int64 
 12  Discussion                480 non-null    int64

gender 나 NationalITy 등은 문자열이다. object 타입 (걍 파이썬 객체)
dtype이 int인 컬럼들 중에 범주형으로 보아야할 데이터는 없는 것으로 보여진다.
"""
None

df.describe()

"""
수치형 데이터로 인식된 컬럼들이 어떤 수치적인 통계를 갖고 있는지 표현

raisedhands 는 max 가 100, min 0,  15, 50, 75  <-- 굉장히 표준적인 형태의 uniform 하게 펼쳐 있다.  

VisITedResources 도 거의 비슷합니다.

AnnouncementsView	Discussion  도 거의 비슷

(히스토그램으로 볼수있을것이다.. )

어느 컬럼에서도 특별한 이상치는 없어 보인다

"""
None

# 좀더 살펴볼 것이 있다. EDA
# 	NationalITy	PlaceofBirth  <-- 어떤 category 들을 갖고 있는지 확인해보고 싶다.

df.columns

df['gender'].value_counts()

df['NationalITy'].value_counts()

df['PlaceofBirth'].value_counts()

df['Class'].value_counts()

"""
분류형 데이터의 unique값과 각 값들의 개수를 보았을 때,
NationalITy , PlaceofBirth, GradeID , SectionID 이 4개의 컬럼은 데이터가 고르지 않다는 것을 알 수 있다.

분석 타켃이 되는 Class 컬럼은 L : 127 , M: 211 , H: 142 로 이루어져 있다.

"""
None



### 문제 3. 수치형 데이터의 시각화및 분석

#### 3-1 : '학생이 수업 중 손을 든 횟수(raisedhands)' 와  '학생의 성적 등급(Class) 간의 관계'에 대한 분석

# - 시각화 코드 작성 
# - 시각화 결과 관찰 /연관성 분석 및 인사이트 -> 별도의 셀에 주석으로 작성하기

# seaborn의 histplot, jointplot, pairplot을 이용해 히스토그램 그리기

df.columns

sns.histplot(x='raisedhands', data=df)

"""
아주 뚜렷하게 쌍봉으로 나타나고 있다.

Class 로 나누어보자 'L', 'M', 'H'
"""
None

sns.histplot(x='raisedhands', data=df, hue='Class')

# 그런데 좀 보기 불편하다. hue order 를 줘보다

sns.histplot(x='raisedhands', data=df, hue='Class', hue_order=['L', 'M', 'H'])

# kde 추가
sns.histplot(x='raisedhands', data=df, hue='Class', hue_order=['L', 'M', 'H'], kde=True)

"""
성적이 낮은 "L" 의 raisedhands 는 굉장히 낮은쪽에 몰려 있다.
M 는 중간.. 쌍봉에 다 속함.
H 에 속한 학생은 대부분 raisedhands 가 높은 쪽에 몰려 있다.

굉장히 유용한 데이터다.  '관계성'

L, H 는 확실하게 '분류' 할수 있을거 같으나.
M 으로 '분류' 할른지는 다소 애매 할거 같다.

수업중에 손을 많이 든 학생들이 좋은 성적을 받을 확률이 높겠다! --> 상관성! 연관성!
"""
None



#### 3-2 : '학생이 과목 컨텐츠를 활용한 횟수(VisITedResources)' 와  '학생의 성적 등급(Class) 간의 관계'에 대한 분석

# - 시각화 코드 작성 
# - 시각화 결과 관찰 /연관성 분석 및 인사이트 -> 별도의 셀에 주석으로 작성하기

# VisITedResources 도 확인해보자.
sns.histplot(x='VisITedResources', data=df, hue='Class', hue_order=['L', 'M', 'H'], kde=True)

"""
성적이 낮은 학생("L")은 확실히 VisITedResources 가 적음을 확인하였다.
M, H 둘다 많이 확인한다.  H가 좀더 많이 몰려 있죠.

raisedHands 와 비슷한 양상을 보이곤 있지만, M 학생이 좀더 값이 높은 쪽으로 몰려있다.
수업시간 참여율 보단 수업외적으로 참여하는 게 좀더 성적에 영향을 덜 받는다? 

VisITedResources는
L 과 M,H 는 가르기 유용하지만
M, H 를 가르기에는 다소 부족하다

"""
None



#### 3-3 : '학생이 과목 공지를 확인한 횟수(AnnouncementsView)' 와  '학생의 성적 등급(Class) 간의 관계'에 대한 분석

# - 시각화 코드 작성 
# - 시각화 결과 관찰 /연관성 분석 및 인사이트 -> 별도의 셀에 주석으로 작성하기

# 다음에는 공지 확인 정도를 보자
df.columns

sns.histplot(x='AnnouncementsView', data=df, hue='Class', hue_order=['L', 'M', 'H'], kde=True)

"""
성적이 안좋은 학생(L)은 다 저조하게 나타나네요.  공지도 제대로 확인 안합니다.
성적이 M, H 인 학생들의 추세는 비슷하게 나타남.
공지를 얼마만큼 확인하는지가 M, H 를 가르는데 크게 연광성이 없어 보입니다.  

성적이 좋은 학생이더라도 일반 공지에는 크게 관심없는 경우도 꽤 많이 있다.
관심이 많은 학생들이 최소한 성적이 나쁘진 않다.
"""
None



#### 3-4 : '학생의 토론 그룹에 참여한 횟수(Discussion)' 와  '학생의 성적 등급(Class) 간의 관계'에 대한 분석

# - 시각화 코드 작성 
# - 시각화 결과 관찰 /연관성 분석 및 인사이트 -> 별도의 셀에 주석으로 작성하기

# discusion 
sns.histplot(x='Discussion', data=df, hue='Class', hue_order=['L', 'M', 'H'], kde=True)

"""
성적이 L 인 학생들이 discussion 에 참여하는 률이.. 위의 다른 지표에 비해선 높습니다.
성적이 H 높은 학생들 중에도 discussion 에 참여 안하는 경우도 제법 있습니다.

쌍봉으로 나타나네요 

M 은 참가를 덜 하는 학생들이 몰려 있습니다. 


discussion 수차 높을수록,  L 과 H,M 의 구분은 되는듯 하나, H 와 M 은 비슷하다
discussion 수치가 낮을수록, L,M,H 의 경향은 모두 비슷하여 성적을 가르기에 유용하지 않다
오히려 일전의 다른 데이터에 비해 좀더 경향성이 보이지 않는것 같다.  좀 flat 하게 나타난다.

우리 예측에는 discussion 에 참여하면 성적이 좀더 좋을것 같다. .. 는 식으로 생각하는데
'사실은 그렇진 않다'는 것을 확인해볼수 있다.
"""
None


"""

지금까지 봐왔던것중
가장 상관성이 좋은 것은 VisitedResources 
수업 관련 리소스를 얼마나 자주 확인하는지에 영향을 받는다.

상당히 흥미로운 내용을 확인할수 있다.


raisedhands 와 VisitedREsoures 는 상당히 잘 갈라주는 것들이니
이 둘의 jointplot 도 확인해보자

"""
None


#### 3-5 : '학생이 과목 컨텐츠를 활용한 횟수(VisITedResources)' 와 '수업 중 손을 든 횟수(raisedhands)' 를 '학생의 성적 등급(Class)' 별로 분류하여 한번에 보여줄수 있는 시각화 및 분석

# - 시각화 코드 작성 
# - 시각화 결과 관찰 /연관성 분석 및 인사이트 -> 별도의 셀에 주석으로 작성하기

df.columns

sns.jointplot(x='VisITedResources', y='raisedhands', data=df, 
                hue='Class', hue_order=['L', 'M', 'H'])

"""
1D 상에서는 분리가 잘 되어 보였는데... 과연 2D에서 좀더 분리가 잘 되어 보이나요?
H, L 는 확실히 구분된다.
L, M 도 비교적 잘 되어 보이죠.
H, M 이 구분하기 어려운건 여기서도 마찬가지인듯 합니다 (우상단 영역)
"""
None

"""
1D 상에서는 분리가 잘 되어 보였는데... 과연 2D에서 좀더 분리가 잘 되어 보이나요?
H, M 이 구분하기 어려운건 여기서도 마찬가지인듯 합니다 (우상단 영역)
그런데, L, M 은 좀더 구분이 잘 되어 보이죠.

2D에서 구분되는 모양을 jointplot 에서 확인해보았습니다.

"""

# pairplot 은 모든 경우의 수에 대한 jointplot 을 한번에 보여줌
sns.pairplot(df)

sns.pairplot(df, hue='Class', hue_order=['L', 'M', 'H'])

"""
scatter plot 은 
'일자형태'로 나타나면 나타날수록 '상관성' 이 높다는 겁니다. 

그런데...
raisedhands x visitedresources  <-- '네모'로 펼쳐진다. 즉, 상관성이 낮다


히스토그램만 보면 상관성이 높아 보이지만, 사실 둘의 상관성은 그닥 높진 않다.

"""
None

"""
scatter 에선 상관성이 그닥 높진 않은데.  histo 에서 이렇게 잘 갈라진다는 것은 
두가지가 서로 다른 축에서 데이터를 나누어 줄수 있다는 것을 의미합니다.
이는 '두가지를 동시에 보는 것' 이 유용하다는 것을 의미한다고 볼수 있다.

비슷한것 두개를 겹쳐놓고 보기보단, 
비슷하지 않은거 두개인데.. 둘다 좋으거면, 좋은거 두개로 하는게 더 좋다는 거라고 
해석할수 있습니다.

Discussion 만 놓고 본다면, Discussion 자체가 그닥 유용하지 않은 feature 이기 때문에 
거의 flat 하게 나타난 feature 입니다.

Discussion x raisedhands 모양을 보면.. 걍 위아래로 펼쳐진(번진) 형태...

반면 visitedresources x raisedhands 는 넓게 펼쳐지긴 했지만, 
서로를 잘 분리하는데 도움이 된다는 겁니다

이 두가지가 서로 나누는데 도움이 될거라는 것을 암시하는 겁니다.
이런식으로 pairplot 을 사용하면 됩니다.

"""
None

# 그리고,
# 무조건 correlation 이 높다고 좋은게 아닙니다.
# 우리가 '분석하는 대상'과 correlation 이 높은게 좋은겁니다.

# 위의 결과 처럼 feature 끼리는 correleation 이 낮은게 , 오히려
# 나중에 서로 다른 측면으로 분석을 하는데 도움을 줄 가능성이 높기에
# 위 결과는 더 좋다 말 할수 있다. 



### 문제 4. 범주형 데이터의 시각화및 분석


#### 4-1 '성(gender)' 별 '성적(Class)' 분포를 시각화 하고 분석

# - 시각화 코드 작성 
# - 시각화 결과 관찰 /연관성 분석 및 인사이트 -> 별도의 셀에 주석으로 작성하기

sns.countplot(x='gender', data=df, hue='Class', hue_order=['L', 'M', 'H'])

"""
관찰 : 남학생은 성적이 낮은쪽(L)으로 분포가 되어 있고,
여학생은 상위권(H) 쪽으로 분포가 되어 있다.

남학생이 여학생보다 숫자가 더 많기에 전체수치는 크긴 하나, 비율로 따지면, 
여학생이 훨씬 더 성적이 좋습니다. (굉장히 흥미 롭죠?)

성별에 따른 L, H 의 구분은 어느정도 이루어 질듯 하나
M 과의 구분은 다소 모호함.

"""
None



#### 4-2 '국적(NationalITy)' 별 '성적(Class)' 분포를 시각화 하고 분석

# - 시각화 코드 작성 
# - 시각화 결과 관찰 /연관성 분석 및 인사이트 -> 별도의 셀에 주석으로 작성하기

sns.countplot(x='NationalITy', data=df, hue='Class', hue_order=['L', 'M', 'H'])

"""
국적이 겹쳐서 잘 안보인다.
rodation 을 주어 보겠습니다
"""
None



plt.figure(figsize=(10,5))
sns.countplot(x='NationalITy', data=df, hue='Class', hue_order=['L', 'M', 'H'])
plt.xticks(rotation=90)
plt.show()

"""
[관찰]
성적이 안좋은 쪽으로 몰려 있는 국가는 쿠웨이트다
성적이 좋은쪽으로 몰려 있는 국가는 미국이나, 레바논, 사우디아라비나, 이라크.  출신 학생들입니다

참고로 위와 같은 분석은 '상관성' 을 분석하는 것 뿐입니다
노파심에 말씀드리는 겁니다.
이런걸 보고 '넌 쿠웨이트 학생이니까 성적이 나쁘겠구나 라고 해석하면 안됩니다.'
이런건 데이터간의 상관성 (correlation) 을 보는 거지, dependency(의존성)을
보는건 아닙니다.   
그래서 이를 가지고 어떠하다! 이유가 뭐다! 라는 식으로 '단정적으로' 생각하면 안됩니다!

단지 통계적으로 쿠웨이트 출신 학생들 중에 비율적으로 성적이 이렇게 분포 한다 
그러니 네가 쿠웨이트 출신이면 어느곳에 속할 '확률'이 높겠구나! 라는 것을
baysian 적으로 이야기 할수 있는 겁니다.   

선입견으로 받아들이면 안됩니다. 

"""
None



#### 4-3 '부모가 응답한 것과 (ParentAnsweringSurvey)'  와 '성적(Class)' 분포를 시각화 하고 분석

# - 시각화 코드 작성 
# - 시각화 결과 관찰 /연관성 분석 및 인사이트 -> 별도의 셀에 주석으로 작성하기

# 부모가 survey 에 응답한 경우와 상관관계
sns.countplot(x='ParentAnsweringSurvey', data=df, hue='Class', hue_order=['L', 'M', 'H'])

"""
부모가 응답한 경우 는 Low 가 거의 없다!
응답하지 않은 경우는 Low가 많다.

굉장히 재미있는 결과 입니다.  부모가 얼마나 관심을 갖고 있느냐가
학생의 성적에 상당한 상관성을 갖고 있다는 점을 유추해볼수 있습니다.

L, H 는 확실히 갈리는 것을 볼수 있다.
L, M 도 확실히 구분된다.
L, M 은 다소 구분하기 힘들수도 있다.

"""
None



#### 4-4 '학습주제 (topic)' 과 '성적(Class)'  분포를 시각화 하고 분석

# - 시각화 코드 작성 
# - 시각화 결과 관찰 /연관성 분석 및 인사이트 -> 별도의 셀에 주석으로 작성하기

# 주제에 따라선 어떨까요?
plt.figure(figsize=(10,5))
sns.countplot(x='Topic', data=df, hue='Class', hue_order=['L', 'M', 'H'])
plt.xticks(rotation=90)
plt.show()

"""
IT 를 선택한 학생들이 성적이 낮은 비율이 높습니다.
IT 가 난이도가 높은걸수도 있습니다.
성적이 좋게 나오는 걸로 보면, Biology 가 성적이 높게 나옵니다.
chemistry 는 성적이 L, H 로 갈립니다.
spanish 도 성적이 안좋습니다

재미있는 결과입니다.

학생들이 어떠한 과목을 어려워 하는지도 들여다 볼수 있습니다
"""
None




### 문제 5. 범주형 대상 Class 컬럼을 수치로 바꾸어 표현하기

#### 5-1 Class_value 컬럼 추가하여 수치로 표현하기

# Class_value 란 컬럼을 새로이 추가하여
# Class 의 L, M, H를 숫자로 바꾸어 표현하기 (eg. L: -1, M: 0, H:1)




# 왜 굳이?
# 그래프에서 L,H,M 세개로 보는게, 한눈에 보기가 어렵기 때문에 (?)
# value 하나로 바꾸어 보려는 겁니다. --> 훨씬 알아보기 쉽다

dict(L=-1, M=0, H=1)

# L, M, H를 숫자로 바꾸어 표현하기 (eg. L: -1, M: 0, H:1)
# Hint) DataFrame의 map() 메소드를 사용

df['Class_value'] = df['Class'].apply(lambda x: dict(L=-1, M=0, H=1)[x])
df['Class_value'] = df['Class'].map(dict(L=-1, M=0, H=1))  # 위와 같은 결과

df.head() # 확인
# 맨 뒤에 Class_Value 추가



#### 5-2 학습주제(topic)별 Class_value 평균값 구하고 시각화 하기

# 숫자로 바꾼 Class_value 컬럼을 이용하여
# 학습주제(topic) 별 Class_value 의 평균값을 구한뒤 
# 내림차순으로 정렬된 결과를 시각화하기 (bat plot 으로 그리세요)

# 일단 함 성별(gender) 로 Class_Value 평균을 내보자
gb = df.groupby('gender').mean()['Class_value']
gb

"""
gender 별로 평균 점수가 나타난다

남학생은 L 에 속한 비율이 많다 보니 마이너스 값이 나온다 
여학생은 그 반대... 양수로 값이 나온다.

"""
None

# 이를 막대그래프로 출력해보자

plt.bar(gb.index, gb)

"""
Female -> 양수로,
Male -> 음수로
극명하게 비교가 된다.
"""
None

# Topic 을 갖고 해봅시다
# 어떤 주제를 갖고 공부했던 학생의 성적이 좋은가?

gb = df.groupby('Topic').mean()['Class_value']
plt.barh(gb.index, gb)  # xtick을 rotation 하는 대신에 barh 사용!

"""
spanish, IT 선택 학생들 성적이 안좋고..
Biology Geology 선택학생들 성적이 좋다.


"""
None


gb = df.groupby('Topic').mean()['Class_value'].sort_values()
plt.barh(gb.index, gb) 

# 성적이 좋은순 -> 나쁜순으로 일목요연하게 볼수 있다. 
# 이러려고, 범주형 대상 Class 컬럼을 수치로 바꾸어 표현하기를 한거다!



