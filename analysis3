# 주제 : 데이터 분석으로 심부전증을 예방할 수 있을까?
----------

## 실습 가이드
1. 데이터를 다운로드 불러옵니다.
1. 코드는 위에서부터 아래로 순서대로 실행합니다.
    
    
## 데이터 소개
1. 이번 주제는 Heart Failure Prediction 데이터셋을 사용합니다.
    
1. 다음 1개의 csv 파일을 사용합니다.
    heart_failure_clinical_records_dataset.csv
    
1. 각 파일의 컬럼은 아래와 같습니다.
    - age: 환자의 나이
    - anaemia: 환자의 빈혈증 여부 (0: 정상, 1: 빈혈)
    - creatinine_phosphokinase: 크레아틴키나제 검사 결과
    - diabetes: 당뇨병 여부 (0: 정상, 1: 당뇨)
    - ejection_fraction: 박출계수 (%)
    - high_blood_pressure: 고혈압 여부 (0: 정상, 1: 고혈압)
    - platelets: 혈소판 수 (kiloplatelets/mL)
    - serum_creatinine: 혈중 크레아틴 레벨 (mg/dL)
    - serum_sodium: 혈중 나트륨 레벨 (mEq/L)
    - sex: 성별 (0: 여성, 1: 남성)
    - smoking: 흡연 여부 (0: 비흡연, 1: 흡연)
    - time: 관찰 기간 (일)
    - DEATH_EVENT: 사망 여부 (0: 생존, 1: 사망)
    
    
    
1. 데이터 URL: https://www.kaggle.com/andrewmvd/heart-failure-clinical-data


---

# Step 0. 의료 데이터셋에 대하여

### 의료 데이터의 수집
- 의료데이터는 어떻게 '수집' 이 되느냐 부터가 굉장히 중요
- 우리나라는 2020.1월에 새로운 법이 통과!  => 데이터 3법
    - 그중에 가장 핵심은 개인정보에 대한 것
    - 의료정보는 굉장히 민감한 개인정보들이 많기 때문에, 수집이 되더라도,  사람들에게 전파되기 어려운 법적인 특성을 있었습니다.    - '가명정보' 를 사용할수 있게 허용됨.
    - '실명정보' 에서 개인식별 정보를 비식별화 (de-identification) 과정을 거쳐서 만들어진 데이터, 쉽게 말해서 가명정보화 하여 일반적으로 사용할수 있는 데이터화 하여, 이후에 관련분야 민간 연구자들에게도 전달될수 있도록 하여 제공하도록 함 --> 데이터3법을 통해 의료데이터에 생긴 핵심적인 변화.
    - 2020년동안 많은 분들이 '바이오 데이터 분석가' 라든지 '4차 산업 혁명' 에 이어 '바이오 데이터' 관련 된 것들이 뜨기 시작함.  (법적인 배경이 있었던 것이다) 
    - 교육현장, 민간 사업체 등에서 공공데이터로 제공이 됨.
    - 데이터를 생산해서 제공하는 의료기관이라든지, 연구기관들에서 더 인센티브를 주는 방식으로 하여 데이터 생산을 더더욱 독력하는 중.
    - 그리하여 의료데이터 수집이 가속회 되고 있고, 그에 따라 의료데이터를 다룰 인력들에 대한 수요가 점점 늘어나고 있다. 
        - 기본적으로 가공해서 업로딩 하는 데이터 엔지니어
        - 데이터분석, 모델링 활용하는 사람들


### 의료 데이터 분석의 현재

- 우리나라는 이제 걸음마 단계.  (그동안 법적 제약)
- 그 이전에는 주로 연구 되었던 것들이 의료 영상 같은 것들. MRI, CT (3D 스캔)
    - 병 판명, 등에 사용
- 아직 분석의 결과는 이렇다 할만한게 없다.
- 의료 데이터를 적극 사용해왔던 국가들 
    - 핀란드 : 환자들에게 전자포털 제공, 자신의 데이터를 제공할지 안할지 관리 가능케 함. 인프라 잘 구성됨.
    - 덴마크 : 국가에서 포털 구축, 진료기록 99% 에게 환자 주치의에게 전달됨. 과거 기록들을 통해 더 좋은 진료서비스, 개인 병력, 과거 어떤 치료 진료 내역등이 공유됨.
    - 영국 : 전자 의무 기록 활용 
    - 중국 : 의료 융합 추진, 병원 공실률 down 시켜 의료 인프라 효율적 활용.  특정 병원에 사람이 쏠리지 않도록 함.  국가적으로 컨트롤 함.
    - 미국 : 주로 연구및 연구 발표 활발. 민간단체에서 임상데이터 수집 가능.  연구가능한데이터 많이 취득함.  의료 빅데이터 관련해서만 논문이 100건 이상 나오는 중.
    - 대한민국 : 우리는 이제 걸음마 시작단계, 할일이 많다.  다른 관점에서 보면, 의료 데이터 다루는 것이 국내에선 수요가 계속 늘어날 것이다!  그래서 이 분야 진입은 전망이 좋다.

# Step 1. 데이터 셋 준비하기

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os

# 탐색적 데이터 분석 (EDA : Exploratory Data Analysis)

# 분석 목적 : 어떠한 요인이 심부전증 사망에 영향을 줄까?

## 문제1 . Pandas 로 csv 파일 읽어들이기

datapath = os.path.join(r'D:\DevRoot\dataset', 'heart_failure_clinical_records_dataset.csv')

df = pd.read_csv(datapath)
df

# Step 2. EDA 및 데이터 기초 통계 분석 

## 문제 2. 데이터 프리임의 각 컬럼 분석하기 

df.shape

df.head()

df.head(10)

# DataFrame에서 제공하는 메소드를 이용하여 컬럼 분석하기 (shape, head(), info(), describe())
# 각 컬럼들이 어떠한 값들, 어떠한 범위를 갖고 있는지 확인

df.info()

##### ↑ 결측치 (missing value ) 및 dtype 확인

"""
총 299개의 ROW가 있고 인덱스 0 ~ 298
Non-null 이 '전부' 299  .  결측치는 없슴을 확인했다
매우 클린한 데이터 셋이다.

총 3개의 float 와 10개의 int 타입으로 dtype 이 설정되었다.
그러나,

비록 dtype 은 int 타입이나, '분류형'으로 보아야 할 데이터들이 있는거 같다.
ex) DEATH_EVENT, smoking, sex, anaemia, diabetes, high_blood_pressure..

"""
None

df.describe()  # 기술통계량 (수치형 데이터에 대한 기술통계량)

###### ↑ balanced vs. imbalanced data 여부 확인 

# 여기서 볼 데이터는 
# anameia :    0 ~ 1 의 범위인데, 평균이 약 0.43 (0.5에 가까운 값)  
# diabetes, high_blood_pressure, sex, smoking, DEATH_EVENT
#  이 정도면 심한 imbalanced data 라 볼수 없어요

# 0 ~ 1 사잇값들의 평균이기에 정확히 0.5 이면 1:1 인거구요.
# 0 혹은 1 로 몰려 있을수록 평균이 한쪽으로 치우치겠죠.

# 지금은 그렇게 심하지 않습니다. 
# DEATH_EVENT 가 가장 심한데.. 0.32107
#  약 1/3 이 사망, 2/3 이 생존한 분들의 데이터다.

![](https://miro.medium.com/max/450/1*zsyN08VVrgHbAEdvv27Pyw.png)

###### ↑ 이상치 (outlier) 를 확인해보기

#### 이상치 (outlier)
이상치 (Outlier)란 관측된 데이터의 범위에서 많이 벗어나 아주 작은 값이나 아주 큰 값
![](https://t1.daumcdn.net/cfile/tistory/9951C8475C518F180B)

"""
숫자로만 보면 알기 어려운 것들이 있다.  
그래도 확인해볼수 있는 것들은
max, min 값이 과도하게 크거나 작은 것들

예를 들어 creatinine_phosphokinase 의 경우
min 값이 23 d이고 중앙값이 250 인데... max  값이 7861 이다!?!?
앞의 것들 min ~ 75% 의 증가세에 비하면 max 값이 상당히 큰 값이다. 상당한 outlier  에 해당한다 볼수 있다.
 상위 몇개 데이터는 배제해볼 필요성도 있겠구나.. 라고  생각해볼수 잇습니다.

ejection_fraction : 크게 문제 없어 보인다
platelets(혈소판 수치) : 크게 문제 없어 보인다  . 증가세가 일정한 느낌
serum_sodium : 크게 문제 없어 보인다.  그러나 값의 범위가 좁은 느김
                   113 ~ 148 범위. 평균이 136  인데... std 가 4.4. 정도밖에 안된다.  
                   
time : 최소 4일 최대 285일 관찰 ..   285일이면 약 9개월 정도 관찰.
      나중에 time 과 DEATH_EVENT 의 관계를 보면 될거 같다.
      사망을 하게 되면 관찰이 멈출테니까..  상당히  correlate 된 데이터라 볼수 있을듯.
      잠시후에 다시 이야기 하도록 하죠.
"""
None


#### 이상치와 박스플롯 (box plot)
![](https://wikidocs.net/images/page/33920/Rplot19.png)
![](https://mblogthumb-phinf.pstatic.net/MjAxOTAzMDZfMjUz/MDAxNTUxODgzOTE4Mjgy.O4NTMQ3OpXjpJ6yoxWwXxyA_yzD6Hk2WlmVhXxVeieQg.04WzOuL6S3Lf5Bv5lrWDb3F9XEZPUxDpszfYw5yIMyMg.PNG.pmw9440/7.2_%EC%9D%B4%EC%83%81%EC%B9%98.png?type=w800)

이상치 탐색을 위해 **박스플롯**으로 시각화하곤 합니다. 박스플롯은 다음과 같은 원리로 그려집니다.


박스플롯은 분위수를 기준으로 그려집니다.<br>
상자 안에 그려져 있는 직선은 중위수(Median)을 나타냅니다.<br>
상자의 밑변은 1분위수를 나타내며, 윗변은 3분위수를 나타냅니다.<br>
상자를 중심으로 위 아래에, 직선이 있는 것을 볼 수 있습니다. <br>

이 직선은 울타리라고 부릅니다.<br>
상자로부터 아래 직선의 계산식 : Q1 - 1.5 * (Q3 - Q1)<br>
상자로부터 위 직선의 계산식 : Q3 + 1.5 *(Q3 - Q1)<br>
이 울타리를 벗어난 값들을 Outlier라고 부릅니다.<br>


Outlier는 기본적으로 통계추정에 있어서 방해가 되고는 합니다.<br>
통계분석은 전부 귀납법인데, 이상치같은 특수 케이스가 규칙을 만드는데 방해가 되기 때문입니다.<br>

#### Outlier의 처리방법

1. 제거를 하는 방법  (단점: 데이터가 버려진다)

2. 데이터 변형을 통해 Outlier문제를 줄여줍니다.

    - 통계추정에세는 정규분포를 맞추어 주는 것이 매우 중요합니다. 보통 Outlier로 인해 한 쪽으로 치우친 분포는 log 변환을 통해 정규성을 맞추어주고는 합니다.

## 문제3. 수치형 데이터의 히스토그램 그리기

### 3-1.나이(age) 와 사망여부 (death event) 의 관계에 대한 분석

sns.histplot(x = 'age', data = df)  # age 분포

"""
60 ~ 70 정도의 평균,  long tail 형태의 데이터 
좌측으로는 좀 뭉쳐있고, 젊은층 데이터는 없이 40대 이상 90대 의 long tail 수치형 데이터
"""
None

sns.histplot(x = 'age', data=df, hue='DEATH_EVENT')

"""
   DEATH_EVENT=1 : 사망하신 분들이 나이대별로 고루 분포되어 있다.  
   DEATH_EVENT=0 : 사망하지 않은분들은 나이가 젊은 쪽에 몰려 있슴을 확인할수 있다

"""
None

# kde : kernel density estimate : 좀더 부드러운 곡선으로  (kde 플롯까지 같이 보여줌)

sns.histplot(x = 'age', data=df, hue='DEATH_EVENT', kde=True)

"""
상당히 범위가 많이 겹쳐 있기 때문에
age 가 DEATH_EVENT 를 가르는데에는 크게 유용하진 않을거 같습니다.
"""
None 

### 3-2. 크레아틴 키나제(creatinine_phosphokinase) 와 사망여부 (death event) 의 관계에 대한 분석

df.columns

sns.histplot(x = 'creatinine_phosphokinase', data=df)

"""
아까 전에 보았듯이 OUTLIER 가 굉장히 많습니다.
그래서 histogram 으로 유용한 데이터를 얻기가 현재로선 쉽지 않습니다.
"""
None

# outlier 를 배제를 하고 보도록 하자.  3000 이상은 떼어내고 보자

sns.histplot(x = 'creatinine_phosphokinase', 
                data=df.loc[df['creatinine_phosphokinase'] < 3000])

"""
이렇게 보아도 히스토그램에서 정보를 얻기가 쉽지 않아 보입니다.
이 정보는 유용하지 않을 가능성이 높습니다.   '통계적인 특징' 이 잘 드러나지 않습니다.

"""
None


### 3-3. 박출계수(ejection_fraction) 와 사망여부 (Death_Event) 의 관계에 대한 분석

df.columns

sns.histplot(x='ejection_fraction', data=df)

sns.histplot(x='ejection_fraction', data=df, bins=10)

sns.histplot(x='ejection_fraction', data=df, bins=13)

sns.histplot(x='ejection_fraction', data=df, bins=13, hue='DEATH_EVENT', kde=True)

"""
ejection_fraction 이 낮은 사람들이 사망을 많이 한것으로 확인할수 있습니다.
높으신 분들은  상대적으로 덜 사망하는것을 확인 가능

비율의 차이는 상당히 크긴 하지만, 
사망자 수 자체는 20 ~ 50 구간에 상당히 분포해 있다. 

생존자를 걸러내는데에는 상당히 도움이 될거 같다.
"""
None


### 3-4. 혈소판(platelets) 와 사망여부 (Death_Event) 의 관계에 대한 분석

df.columns

sns.histplot(x='platelets', data=df)

sns.histplot(x='platelets', data=df, hue='DEATH_EVENT')

"""
혈소판 데이터는 분석에 굉장히 도움이 안될거 같다.
DEATH_EVENT 와는 거의 상관이 없어 보입니다.

"""
None


### 3-5. '혈소판'과 'creatinine_phosphokinase' 그리고 '사망여부'와의 관계성 시각화하고 분석하기

df.columns

sns.jointplot(x='platelets', y='creatinine_phosphokinase', data=df, hue='DEATH_EVENT', alpha=0.3)

"""
밑에 많이 뭉쳐 있어서 판단하기 어렵습니다.
뭉쳐 있는게 어쨌든 DEATH_EVENT 를  가르는데는 도움이 되지 않습니다.
"""
None

## 문제 4. Boxplot 계열을 이용하여 범주별 통계 확인하기


# seaborn의 Boxplot 계열(boxplot(), violinplot(), swarmplot())을 사용
# Hint) hue 키워드를 사용하여 범주 세분화 가능


# 범주형 데이터의 경우
# 위 히스토그램 데이터를 볼수 있는 것과 달리
# boxplot 을 통해 범주별로 따로 통계를 내야 어느정도 확인을 할수 있다.


### 4-1. 박출계수(ejection_fraction) 와 사망여부 (death event) 의 관계에 대한 분석

df.columns

sns.boxplot(x='DEATH_EVENT', y='ejection_fraction', data=df)

"""
생존(0) 한 사람과 사망(1)한 사람 사이에 
ejection_fraction의  평균과 전체적인 값의 범위에 차이가 어느정도 있슴을 확인
ejection_fraction 은 DEATH_EVENT 에 영향을 주는거 같다
"""
None

### 4-2. 흡연여부(smoking) 와 사망여부 (death event) 의 관계에 대한 분석

df.columns

# smoking 괴 ejection_fraction 과의 관계는 어떻까?

sns.boxplot(x='smoking', y='ejection_fraction', data=df)

sns.violinplot(x='DEATH_EVENT', y='ejection_fraction', data=df)

sns.violinplot(x='DEATH_EVENT', y='ejection_fraction', data=df, hue='smoking')

# swarmplot <= scatter + violon 을 합친 형태

sns.swarmplot(x='DEATH_EVENT', y='platelets', data=df)

sns.swarmplot(x='DEATH_EVENT', y='platelets', data=df, hue='smoking')

"""
비흡연자(파란색), 흡연자(주황색) 분표가 비슷하게 분포를 하고 있다 (섞여있다)
만약 파란색 과 주황색 분포가 많이 분리 되어 있다면 DEATH_EVENT 관련하여 많은 영향을 끼친다고 볼수 있겠으나
시각화 결과에서 보듯이 smoking 이 사망에 큰 영향을 주는 것으로 보이진 않는다
"""
None

"""
대표적인 정보의  EDA 를 해보았습니다
데이터가 잘 갈라지는 데이터가 아니라서 (데이터 개수도 적구..)
EDA를 통해서 숫자들은 어느정도 인사이트를 얻을수 있었지만
시각적으로는 많은 인사이트를 얻진 못한 데이터 였습니다.

데이터(변수) 하나하나만 가지고는 유용한 정보를 얻긴 쉽지 않을수 있습니다.
"""
None

### 4-3. countplot 을 사용하여  범주형 통계 확인하기

sns.countplot(x='DEATH_EVENT', data=df)

### countplot 을 사용하여 성별(sex) 과 사망여부(DEATH_EVENT) 통계확인하기

sns.countplot(x='sex', data=df, hue='DEATH_EVENT')

"""
관측 데이터는 남성이 여성에 비해 2배정도 많았으나
성별이 특별히 사망에 큰 차이를 가져다 주진 않는거 같다.
"""
None

## 문제5 새로운 파생변수를 생성하여 분석하기

df['age']

### 5-1. 나이대 (age_span) 컬럼을 새로 추가
기존의 컬럼등을 사용하여 새로운 컬럼 데이터를 만든뒤 이를 분석에 활용할수 있다.

df['age_span'] = (df['age'] / 10).astype(int) * 10

df

df.groupby('age_span').size()

df.groupby('age_span')['age'].mean()

# 나이대별 사망자 수 계산하기
ab = df.groupby('age_span').sum()['DEATH_EVENT']
ab

plt.bar(ab.index, ab)

# 내림차순, 혹은 오름차순 가능
df2 = pd.DataFrame(ab)
df2

df2.sort_values(by="DEATH_EVENT", ascending=False)

df2.sort_values(by="DEATH_EVENT", ascending=False).plot(kind='bar')

# ※ pairplot  <- 모든 수치형데이터에 대한 조합을 jointplot 으로 한번에 보여줌

sns.pairplot(df[['age', 'creatinine_phosphokinase', 'ejection_fraction', 'DEATH_EVENT']])
